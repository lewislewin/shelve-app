@page
@model shelve_app.Pages.Basket.IndexModel
@using Newtonsoft.Json.Linq;

@{
    ViewData["Title"] = "Basket";
}
@functions {
    public float Multiply(float x, float y)
    {
        return x * y;
    }
    public float GetTotal()
    {
        float total = 0;
        foreach (var item in JObject.Parse(HttpContext.Request.Cookies["Cart"]))
        {
            total = total + float.Parse(item.Value.ToString()) * float.Parse(Model.Product[int.Parse(item.Key) - 1].Price.ToString());
        }
        return total;
    }
    public void RemoveOne(int id)
    {
        JObject cart = JObject.Parse(HttpContext.Request.Cookies["Cart"]);
    }
    public void AddOne(int id)
    {
        
    }
}

<h1>Basket</h1>

<table class="table">
    <thead>
        <tr>
            <th>
                Product
            </th>
            <th>
                Price
            </th>
            <th>
                VatRate
            </th>
            <th>
                Quantity
            </th>
            <th>
                Line Total
            </th>
        </tr>
    </thead>
    <tbody>
    @foreach (var item in JObject.Parse(HttpContext.Request.Cookies["Cart"])) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => Model.Product[int.Parse(item.Key) - 1].Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => Model.Product[int.Parse(item.Key) - 1].Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => Model.Product[int.Parse(item.Key) - 1].VatRate)
            </td>
            <td>
                @item.Value
            </td>
                <td>
                    £@Multiply(float.Parse(item.Value.ToString()), float.Parse(Model.Product[int.Parse(item.Key) - 1].Price.ToString()))
                </td>
            </tr>
}
    </tbody>
</table>
<div class="col">
    <div class="row">
        Total: £@GetTotal()
        <a href="../Products/Index">Buy more Books!</a>
        <a href="CHECKOUT">Checkout!</a>
    </div>
</div>